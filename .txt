// const downloadPDF = () => {
  //   setLoadingPDF(true); // Start loader

  //   const input = tableRef.current;

  //   html2canvas(input).then((canvas) => {
  //     const imgData = canvas.toDataURL("image/png");
  //     const pdf = new jsPDF("p", "mm", "a4");

  //     const imgWidth = 210; // A4 width in mm
  //     const pageHeight = 295; // A4 height in mm
  //     const imgHeight = (canvas.height * imgWidth) / canvas.width;
  //     let heightLeft = imgHeight;

  //     let position = 0;

  //     // Add the first page
  //     pdf.addImage(imgData, "PNG", 0, position, imgWidth, imgHeight);
  //     heightLeft -= pageHeight;

  //     // Add remaining pages
  //     while (heightLeft >= 0) {
  //       position = heightLeft - imgHeight;
  //       pdf.addPage();
  //       pdf.addImage(imgData, "PNG", 0, position, imgWidth, imgHeight);
  //       heightLeft -= pageHeight;
  //     }

  //     pdf.save("table.pdf");

  //     setLoadingPDF(false); // End loader
  //   });
  // };


  // import React, { useState } from "react";
// import { styled } from "@mui/material/styles";
// import Box from "@mui/material/Box";
// import MuiAppBar from "@mui/material/AppBar";
// import Toolbar from "@mui/material/Toolbar";
// import { Avatar } from "@mui/material";
// import Menu from "@mui/material/Menu";
// import MenuItem from "@mui/material/MenuItem";
// import { Outlet, useNavigate } from "react-router-dom";
// import ProfileImg from "../../../assets/images/Ellipse 58.png";
// import { Layout } from "./layout";
// import { handleSesssionStorage } from "../../../utils/helperFunctions";
// import { useDispatch } from "react-redux";
// import { logout } from "../../../redux/slice/userSlice";
// const drawerWidth = 280;

// const AppBar = styled(MuiAppBar)(({ theme }) => ({
//   zIndex: theme.zIndex.drawer + 1,
//   transition: theme.transitions.create(["width", "margin"], {
//     easing: theme.transitions.easing.sharp,
//     duration: theme.transitions.duration.leavingScreen,
//   }),
//   marginLeft: drawerWidth,
//   width: `calc(100% - ${drawerWidth}px)`,
//   transition: theme.transitions.create(["width", "margin"], {
//     easing: theme.transitions.easing.sharp,
//     duration: theme.transitions.duration.enteringScreen,
//   }),
// }));

// export default function RootLayout() {
//   const [anchorEl, setAnchorEl] = useState(null);
//   const navigate = useNavigate();
//   const dispatch = useDispatch();

//   const handleProfileClick = (event) => {
//     setAnchorEl(event.currentTarget);
//   };

//   const handleMenuClose = () => {
//     setAnchorEl(null);
//   };

//   const handleLogOut = () => {
//     // Clear session storage
//     handleSesssionStorage("remove", "ur");

//     // Optionally clear local storage if used
//     localStorage.clear();

//     // Dispatch the logout action to clear Redux state
//     dispatch(logout());

//     // Navigate to the login page
//     navigate("/");
//   };

//   return (
//     <Box sx={{ display: "flex", position: "relative" }}>
//       <AppBar
//         position="fixed"
//         sx={{
//           backgroundColor: "white",
//           boxShadow:
//             "rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;",
//         }}
//       >
//         <Toolbar>
//           <Avatar
//             alt="Profile Logo"
//             src={ProfileImg} // Replace with the path to your profile logo image
//             sx={{
//               width: "60px",
//               height: "60px",
//               marginLeft: "auto",
//               cursor: "pointer",
//             }}
//             onClick={handleProfileClick}
//           />
//           <Menu
//             anchorEl={anchorEl}
//             onClose={handleMenuClose}
//             anchorOrigin={{
//               vertical: "bottom",
//               horizontal: "right",
//             }}
//             transformOrigin={{
//               vertical: "top",
//               horizontal: "right",
//             }}
//             keepMounted
//             sx={{ borderRadius: "10px" }}
//             open={anchorEl}
//           >
//             <MenuItem
//               onClick={handleLogOut}
//               sx={{
//                 "&:hover": {
//                   backgroundColor: "#c4cdd5",
//                   fontSize: "16px !important",
//                 },
//               }}
//             >
//               Sign Out
//             </MenuItem>
//           </Menu>
//         </Toolbar>
//       </AppBar>
//       <Layout />
//       <Box
//         component="main"
//         sx={{ flexGrow: 1, bgcolor: "background.default", p: 3 }}
//       >
//         <Toolbar />
//         <Outlet />
//       </Box>
//     </Box>
//   );
// }



// import React, { useState } from "react";
// import { styled } from "@mui/material/styles";
// import List from "@mui/material/List";
// import ListItemButton from "@mui/material/ListItemButton";
// import ListItemText from "@mui/material/ListItemText";
// import { Link, useLocation, useNavigate } from "react-router-dom";
// import {
//   AdminmenuItems,
//   UsermenuItems,
// } from "../../../utils/constants/menuItems";
// import MuiDrawer from "@mui/material/Drawer";
// import logo from "../../../assets/images/tvs-lucas-logo.png";
// import { Typography } from "@mui/material";
// import { handleSesssionStorage } from "../../../utils/helperFunctions";

// const drawerWidth = 280;

// const openedMixin = (theme) => ({
//   width: drawerWidth,
//   transition: theme.transitions.create("width", {
//     easing: theme.transitions.easing.sharp,
//     duration: theme.transitions.duration.enteringScreen,
//   }),
//   overflowX: "hidden",
//   backgroundColor: "white",
// });

// const Drawer = styled(MuiDrawer)(({ theme }) => ({
//   width: drawerWidth,
//   flexShrink: 0,
//   whiteSpace: "nowrap",
//   boxSizing: "border-box",
//   ...openedMixin(theme),
//   "& .MuiDrawer-paper": openedMixin(theme),
// }));

// function MultipleList({ menuItems }) {
//   const { name, path, id } = menuItems;
//   const [open, setOpen] = useState(true);

//   const navigate = useNavigate();
//   let location = useLocation();

//   const handleClick = (e) => {
//     e.preventDefault();
//     navigate(path);
//     setOpen((prev) => !prev);
//   };

//   return (
//     <>
//       {name && (
//         <ListItemButton
//           component={Link}
//           to={path}
//           className="multi-list"
//           onClick={handleClick}
//         >
//           {/* <ListIcon sx={{ marginRight: "8px" }} /> */}
//           <ListItemText primary={name} onClick={() => navigate(path)} />
//         </ListItemButton>
//       )}
//       <List component="div">
//         {menuItems.isNested.map((nestedItem, index) => {
//           const { name, path, icon, child, id } = nestedItem;
//           let isActive =
//             location.pathname === path || location.pathname === child;
//           return (
//             <div key={index}>
//               <ListItemButton
//                 component={Link}
//                 to={path}
//                 style={{
//                   backgroundColor: isActive ? "#0057ac" : "",
//                   color: isActive ? "white" : "",
//                   margin: isActive ? "0px 10px 0px 10px" : "",
//                   // width: "100%",
//                   borderRadius: isActive ? "10px" : "",
//                   display: "flex",
//                   justifyContent: "center",
//                 }}
//                 key={`${index}-item`}
//                 className="nested-list"
//                 sx={{
//                   "&:hover": {
//                     color: "#00963f",
//                   },
//                 }}
//               >
//                 <span style={{ margin: "5px 10px" }}>{icon}</span>
//                 <ListItemText
//                   primary={
//                     <Typography
//                       variant="body1"
//                       // sx={{ fontWeight: isActive ? "bold" : "" }}
//                       sx={{ fontWeight: "600" }}
//                     >
//                       {name}
//                     </Typography>
//                   }
//                   className={isActive ? "menuname" : "menunameIsActive"}
//                 />
//               </ListItemButton>
//             </div>
//           );
//         })}
//       </List>
//     </>
//   );
// }

// export const Layout = () => {
//   const [layoutData, setLayoutData] = useState([]);
//   console.log(layoutData, "layoutData");

//   React.useEffect(() => {
//     const UserRole = parseInt(handleSesssionStorage("get", "ur"), 10);
//     console.log(UserRole, "UserRole");
//     if (UserRole === 2) {
//       setLayoutData(UsermenuItems);
//     } 
//     // else if (UserRole === 3) {
//     //   setLayoutData(AdminmenuItems);
//     // } 
//     else {
//       setLayoutData([]); // Default empty state or handle as needed
//     }
//   }, []);

//   return (
//     <div
//       className="layoutcontainer"
//       style={{ backgroundColor: "blue !important" }}
//     >
//       <Drawer variant="permanent" className="layoutlist">
//         <img
//           src={logo}
//           className="logo"
//           style={{ width: "100%", margin: "20px 0px" }}
//         />
//         <List>
//           {layoutData.map((items, index) => {
//             return items.isNested ? (
//               <MultipleList menuItems={items} key={index} />
//             ) : (
//               <></>
//             );
//           })}
//         </List>
//       </Drawer>
//     </div>
//   );
// };
